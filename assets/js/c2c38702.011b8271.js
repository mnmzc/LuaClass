"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[678],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),f=a,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||r;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var d=2;d<r;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},13856:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(87462),a=(n(67294),n(3905));const r={sidebar_position:3},o="Defining the Class",s={unversionedId:"defining",id:"defining",title:"Defining the Class",description:"Defining Properties",source:"@site/docs/defining.md",sourceDirName:".",slug:"/defining",permalink:"/LuaClass/docs/defining",draft:!1,editUrl:"https://github.com/mnmzc/LuaClass/edit/master/docs/defining.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Basic Classes",permalink:"/LuaClass/docs/basicClasses"}},l={},d=[{value:"Defining Properties",id:"defining-properties",level:2},{value:"Defining Methods",id:"defining-methods",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Method Modifiers",id:"method-modifiers",level:3},{value:"static",id:"static",level:4}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"defining-the-class"},"Defining the Class"),(0,a.kt)("h2",{id:"defining-properties"},"Defining Properties"),(0,a.kt)("p",null,"Defining properties is very simple. Just assign the property to a new index of the ",(0,a.kt)("inlineCode",{parentName:"p"},"def")," keyword like you would any other table."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'def.prop1 = "hi"\ndef.prop2 = "bye"\n')),(0,a.kt)("h2",{id:"defining-methods"},"Defining Methods"),(0,a.kt)("p",null,'A class would be useless without methods. If you had a "class" with just properties, you would only need to use a table. However, you can easily define a method making use of the ',(0,a.kt)("inlineCode",{parentName:"p"},"Class.addMethod")," function. This will return an object. Finally, assign the method to the ",(0,a.kt)("inlineCode",{parentName:"p"},"def")," keyword, using the name of the method as the index."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"def.myMethod = Class.addMethod(function(self, arg1, arg2)\n    self.prop1 = arg1\n    self.prop2 = arg2\nend)\n")),(0,a.kt)("h3",{id:"constructor"},"Constructor"),(0,a.kt)("p",null,"A constructor method is also defined in the definition of a Class. To do this, you must specifically set the ",(0,a.kt)("inlineCode",{parentName:"p"},"_construct")," key of the ",(0,a.kt)("inlineCode",{parentName:"p"},"def"),". Like other methods, make sure to use ",(0,a.kt)("inlineCode",{parentName:"p"},"Class.addMethod"),". Now, when you instantiate an object using ",(0,a.kt)("inlineCode",{parentName:"p"},"MyClass.new()")," it will pass the parameters to your construction function."),(0,a.kt)("h3",{id:"method-modifiers"},"Method Modifiers"),(0,a.kt)("p",null,"Method modifiers are useful for specifying how your method can be accessed. To get access "),(0,a.kt)("h4",{id:"static"},"static"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"static")," modifier specifies that a method can be used without instantiating an object. You would do this by directly calling the method on a ",(0,a.kt)("em",{parentName:"li"},"class"),". (It would still work if you called it on an object.)  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local static, private = Class.modifiers()\nlocal Math = Class.new(function(def)\n    def.add = Class.addMethod(static, function(num1, num2)\n        return num1 + num2\n    )\n)\n\n-- The below statement will work fine because 'add' is a static method, we can call it without instantiating an object of the 'Math' class.\nprint(Math.add(7, 3)) -- 10\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"private")," modifier specifies that a method can only be used internally in a definition. This means that if you want to call a private method, use the ",(0,a.kt)("inlineCode",{parentName:"li"},"def")," and then call the method.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local static, private = Class.modifiers()\nlocal Cake = Class.new(function(def)\n    def.temp = 250\n\n    def.getTemperature = Class.addMethod(private, function(self, num1, num2)\n        return self.temp\n    )\n\n    def.isCooked = Class.addMethod(function(self)\n        local temp = def.getTemperature()\n\n        if (temp >= 250) then\n            print("Cooked!")\n        else\n            print("Not yet")\n        end\n    end)\n)\n\nlocal myCake = Cake.new()\nmyCake.isCooked() -- Cooked!\n\nmyCake.getTemperature() -- Throws an error since \'getTemperature\' is private\n')))}p.isMDXComponent=!0}}]);